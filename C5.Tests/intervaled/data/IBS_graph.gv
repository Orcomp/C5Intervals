digraph IntervalBinarySearchTree {
	node [shape=record];
	struct0 [label="{<key> 9|{empty|A
E
G|empty}}"];
	struct1 [label="{<key> 7|{empty|B
G|G}}"];
	struct0 -> struct1;
	struct2 [label="{<key> 2|{empty|B
C
G|G
B}}"];
	struct1 -> struct2;
	struct3 [label="{<key> 1|{empty|G
C|G
C}}"];
	struct2 -> struct3;
	struct4 [label="{<key> -2147483648|{empty|empty|G}}"];
	struct3 -> struct4;
	leaf0[shape=point];
	struct4:left -> leaf0;
	leaf1[shape=point];
	struct4:right -> leaf1;
	leaf2[shape=point];
	struct3:right -> leaf2;
	struct5 [label="{<key> 3|{C|empty|empty}}"];
	struct2 -> struct5;
	leaf3[shape=point];
	struct5:left -> leaf3;
	leaf4[shape=point];
	struct5:right -> leaf4;
	struct6 [label="{<key> 8|{empty|E|E}}"];
	struct1 -> struct6;
	leaf5[shape=point];
	struct6:left -> leaf5;
	leaf6[shape=point];
	struct6:right -> leaf6;
	struct7 [label="{<key> 19|{A|D
A|empty}}"];
	struct0 -> struct7;
	struct8 [label="{<key> 17|{G|G|D}}"];
	struct7 -> struct8;
	struct9 [label="{<key> 12|{E|E|empty}}"];
	struct8 -> struct9;
	leaf7[shape=point];
	struct9:left -> leaf7;
	leaf8[shape=point];
	struct9:right -> leaf8;
	struct10 [label="{<key> 18|{empty|F|empty}}"];
	struct8 -> struct10;
	leaf9[shape=point];
	struct10:left -> leaf9;
	leaf10[shape=point];
	struct10:right -> leaf10;
	struct11 [label="{<key> 20|{D|D|empty}}"];
	struct7 -> struct11;
	leaf11[shape=point];
	struct11:left -> leaf11;
	leaf12[shape=point];
	struct11:right -> leaf12;
}
