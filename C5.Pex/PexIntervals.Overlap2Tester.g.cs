// <copyright file="PexIntervals.Overlap2Tester.g.cs">Copyright ©  2013</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using C5;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using C5.intervals;
using C5.Pex.Factories;
using Microsoft.Pex.Framework.Exceptions;

namespace C5.Pex
{
    public partial class PexIntervals
    {
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
public void Overlap2Tester478()
{
    IntervalBase<int> intervalBase;
    bool b;
    intervalBase = IntervalBaseFactory.Create(4, 513, false, false);
    b = this.Overlap2Tester
            ((IInterval<int>)intervalBase, (IInterval<int>)intervalBase);
    Assert.AreEqual<bool>(true, b);
}
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
[PexRaisedException(typeof(PexAssertFailedException))]
public void Overlap2TesterThrowsPexAssertFailedException952()
{
    IntervalBase<int> intervalBase;
    IntervalBase<int> intervalBase1;
    bool b;
    intervalBase = IntervalBaseFactory.Create(1, 133, false, false);
    intervalBase1 = IntervalBaseFactory.Create(224, 1032, false, false);
    b = this.Overlap2Tester
            ((IInterval<int>)intervalBase, (IInterval<int>)intervalBase1);
}
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
[PexRaisedException(typeof(PexAssertFailedException))]
public void Overlap2TesterThrowsPexAssertFailedException964()
{
    IntervalBase<int> intervalBase;
    IntervalBase<int> intervalBase1;
    bool b;
    intervalBase = IntervalBaseFactory.Create(0, 33, false, false);
    intervalBase1 = IntervalBaseFactory.Create(33, 34, false, false);
    b = this.Overlap2Tester
            ((IInterval<int>)intervalBase, (IInterval<int>)intervalBase1);
}
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
[PexRaisedException(typeof(PexAssertFailedException))]
public void Overlap2TesterThrowsPexAssertFailedException884()
{
    IntervalBase<int> intervalBase;
    IntervalBase<int> intervalBase1;
    bool b;
    intervalBase = IntervalBaseFactory.Create(0, 33, false, false);
    intervalBase1 = IntervalBaseFactory.Create(33, 34, true, false);
    b = this.Overlap2Tester
            ((IInterval<int>)intervalBase, (IInterval<int>)intervalBase1);
}
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
[PexRaisedException(typeof(PexAssertFailedException))]
public void Overlap2TesterThrowsPexAssertFailedException829()
{
    IntervalBase<int> intervalBase;
    IntervalBase<int> intervalBase1;
    bool b;
    intervalBase = IntervalBaseFactory.Create(4, 257, false, false);
    intervalBase1 = IntervalBaseFactory.Create(0, 1, false, false);
    b = this.Overlap2Tester
            ((IInterval<int>)intervalBase, (IInterval<int>)intervalBase1);
}
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
[PexRaisedException(typeof(PexAssertFailedException))]
public void Overlap2TesterThrowsPexAssertFailedException468()
{
    IntervalBase<int> intervalBase;
    IntervalBase<int> intervalBase1;
    bool b;
    intervalBase = IntervalBaseFactory.Create(5, 12, false, false);
    intervalBase1 = IntervalBaseFactory.Create(1, 5, false, false);
    b = this.Overlap2Tester
            ((IInterval<int>)intervalBase, (IInterval<int>)intervalBase1);
}
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
[PexRaisedException(typeof(PexAssertFailedException))]
public void Overlap2TesterThrowsPexAssertFailedException505()
{
    IntervalBase<int> intervalBase;
    IntervalBase<int> intervalBase1;
    bool b;
    intervalBase = IntervalBaseFactory.Create(256, 513, true, false);
    intervalBase1 = IntervalBaseFactory.Create(0, 256, false, false);
    b = this.Overlap2Tester
            ((IInterval<int>)intervalBase, (IInterval<int>)intervalBase1);
}
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
[PexRaisedContractException]
public void Overlap2TesterThrowsContractException50()
{
    bool b;
    b = this.Overlap2Tester((IInterval<int>)null, (IInterval<int>)null);
}
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
[PexRaisedContractException]
public void Overlap2TesterThrowsContractException295()
{
    IntervalBase<int> intervalBase;
    bool b;
    intervalBase = IntervalBaseFactory.Create(0, 0, false, false);
    b = this.Overlap2Tester((IInterval<int>)intervalBase, (IInterval<int>)null);
}
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
[PexRaisedContractException]
public void Overlap2TesterThrowsContractException355()
{
    IntervalBase<int> intervalBase;
    bool b;
    intervalBase = IntervalBaseFactory.Create(0, 0, false, false);
    b = this.Overlap2Tester
            ((IInterval<int>)intervalBase, (IInterval<int>)intervalBase);
}
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
[PexRaisedContractException]
public void Overlap2TesterThrowsContractException278()
{
    IntervalBase<int> intervalBase;
    bool b;
    intervalBase = IntervalBaseFactory.Create(513, 274, false, false);
    b = this.Overlap2Tester
            ((IInterval<int>)intervalBase, (IInterval<int>)intervalBase);
}
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
[PexRaisedContractException]
public void Overlap2TesterThrowsContractException34()
{
    IntervalBase<int> intervalBase;
    bool b;
    intervalBase = IntervalBaseFactory.Create
                       (0, 0, PexSafeHelpers.ByteToBoolean((byte)128), false);
    b = this.Overlap2Tester
            ((IInterval<int>)intervalBase, (IInterval<int>)intervalBase);
}
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
[PexRaisedContractException]
public void Overlap2TesterThrowsContractException695()
{
    IntervalBase<int> intervalBase;
    bool b;
    intervalBase =
      IntervalBaseFactory.Create(0, 0, PexSafeHelpers.ByteToBoolean((byte)128), 
                                       PexSafeHelpers.ByteToBoolean((byte)128));
    b = this.Overlap2Tester
            ((IInterval<int>)intervalBase, (IInterval<int>)intervalBase);
}
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
[PexRaisedContractException]
public void Overlap2TesterThrowsContractException853()
{
    IntervalBase<int> intervalBase;
    IntervalBase<int> intervalBase1;
    bool b;
    intervalBase = IntervalBaseFactory.Create(0, 1, false, false);
    intervalBase1 = IntervalBaseFactory.Create(0, 0, false, false);
    b = this.Overlap2Tester
            ((IInterval<int>)intervalBase, (IInterval<int>)intervalBase1);
}
[TestMethod]
[PexGeneratedBy(typeof(PexIntervals))]
[PexRaisedContractException]
public void Overlap2TesterThrowsContractException172()
{
    IntervalBase<int> intervalBase;
    IntervalBase<int> intervalBase1;
    bool b;
    intervalBase = IntervalBaseFactory.Create(0, 256, false, false);
    intervalBase1 = IntervalBaseFactory.Create(536871171, 266, false, false);
    b = this.Overlap2Tester
            ((IInterval<int>)intervalBase, (IInterval<int>)intervalBase1);
}
    }
}
